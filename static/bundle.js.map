{"version":3,"sources":["webpack:///webpack/bootstrap 526c5fc887d1f41aceb1","webpack:///./lib/main.js","webpack:///./lib/cpu.js","webpack:///./lib/operations.js","webpack:///./lib/debug/data-element.js","webpack:///./~/normalize.css/normalize.css","webpack:///./style/main.css"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 526c5fc887d1f41aceb1\n **/","require('normalize.css');\nrequire('../style/main.css');\n\nimport CPU from './cpu';\nimport DataElement from './debug/data-element';\n\nconst binds = [];\n\nfunction updateBinds() {\n  for (let i = 0; i < binds.length; ++i) {\n    binds[i].update();\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', _ => {\n  let view = document.getElementById('screen');\n\n  const cpu = window.cpu = new CPU();\n\n  const cpuTable = document.getElementById('cpu');\n  const keys = Object.keys(cpu._registers);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const value = cpu._registers[key];\n    const row = document.createElement('tr');\n\n    const name = document.createElement('td');\n    name.textContent = key;\n    row.appendChild(name);\n\n    const text = document.createElement('td');\n    text.textContent = value;\n    row.appendChild(text);\n\n    const data = new DataElement(text, cpu._registers, key);\n    binds.push(data);\n\n    cpuTable.appendChild(row);\n  }\n\n  window.requestAnimationFrame(function frame() {\n    updateBinds();\n    window.requestAnimationFrame(frame);\n  });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/main.js\n **/","import operations from './operations';\n\nclass CPU {\n  constructor(mmu) {\n    this._mmu = mmu;\n\n    this._clock = {\n      m: 0,\n      c: 0\n    };\n\n    this._registers = {\n      // 8-bit\n      // Hi    Lo\n      a: 0, f: 0,   // Accumulator & Flags\n      b: 0, c: 0,   // BC\n      d: 0, e: 0,   // DE\n      h: 0, l: 0,   // HL\n      // 16-bit\n      sp: 0xFFFE,   // Stack Pointer\n      pc: 0x100,    // Program Counter\n      m: 0,         // Clock last instruction,\n\n      // Misc\n      halt: 0,      // Halt status\n      stop: 0,      // Stop status\n      interrupt: 0  // Interrupt enable status\n\n      // Flag\n      // Z N H C 0 0 0 0\n      // Z (Zero), N (Subtract), H (Half Carry), C (Carry)\n    };\n  }\n\n  step() {\n    const code = this._mmu.readByte(this._registers.pc);\n    const operation = operations.codes[code];\n    this._registers.pc++;\n    if (operation) {\n      operation(this._registers, this._mmu);\n    } else {\n      throw new Error(`No instruction matching ${code}`);\n    }\n\n    this._registers.pc &= 0xFFFF;\n    this._registers.sp &= 0xFFFF;\n    this._clock.m += this._registers.m;\n    this._clock.c += this._registers.m * 4;\n  }\n\n  add() {\n    // Add\n    this._registers.a += this._registers.e;\n    // Clear flags\n    this._registers.f = 0;\n\n    // Check zero\n    if (!(this._registers.a & 255)) this._registers.f |= 0x80;\n    // Check carry\n    if (this._registers.a > 255) this._registers.f |= 0x10;\n    // Mask to 8 bits\n    this._registers.a &= 255;\n\n    this._registers.m = 1;\n  }\n\n  compare() {\n    let temp = this._registers.a;\n    temp -= this._registers.b;\n    this._registers.f |= 0x40;\n    if (!(temp & 255)) this._registers.f |= 0x80;\n    if (temp < 0) this._registers.f |= 0x10;\n    this._registers.m = 1;\n  }\n\n  nop() {\n    this._registers.m = 1;\n  }\n\n  pushbc() {\n    this._registers.sp--;\n    this._mmu.writeByte(this._registers.sp, this._registers.b);\n    this._registers.sp--;\n    this._mmu.writeByte(this._registers.sp, this._registers.c);\n    this._registers.m = 3;\n  }\n\n  pophl() {\n    this._registers.l = this._mmu.readByte(this._registers.sp);\n    this._registers.sp++;\n    this._registers.h = this._mmu.readByte(this._registers.sp);\n    this._registers.sp++;\n    this._registers.m = 3;\n  }\n\n  ldamm() {\n    const address = this._mmu.readWord(this._registers.pc);\n    this._registers.pc += 2;\n    this._registers.a = this._mmu.readByte(address);\n    this._registers.m = 4;\n  }\n\n  reset() {\n    for (let key in this._registers) {\n      if (!this._registers.hasOwnProperty(key)) continue;\n\n      this._registers[key] = 0;\n    }\n    this._registers.sp = 0xFFFE;\n    this._registers.pc = 0x100;\n\n    this._clock.mt = 0;\n    this._clock.cl = 0;\n  }\n}\n\nexport default CPU;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/cpu.js\n **/","const operations = {\n  codes: [],\n  cb: []\n};\nconst codes = operations.codes;\nconst cbOperations = operations.cb;\n\n// Helpers\n\n// Retrieve the result of a pair of registers\nfunction pairRegister(registers, r1, r2) {\n  return registers[r1] << 8 + registers[r2];\n}\n\nfunction getZero(registers) {\n  return (registers.f & 0b10000000) ? 1 : 0;\n}\n\nfunction getSubtraction(registers) {\n  return (registers.f & 0b01000000) ? 1 : 0;\n}\n\nfunction getHalfCarry(registers) {\n  return (registers.f & 0b00100000) ? 1 : 0;\n}\n\nfunction getCarry(registers) {\n  return (registers.f & 0b00010000) ? 1 : 0;\n}\n\n// 8-bit loads\n\n// Load value to r\nfunction ldRn(r) {\n  return function(registers, mmu) {\n    registers[r] = mmu.readByte(registers.pc);\n    registers.pc++;\n    registers.m = 2;\n  };\n}\n\n// Load r2 to r1\nfunction ldR1R2(r1, r2) {\n  return function(registers) {\n    registers[r1] = registers[r2];\n    registers.m = 1;\n  };\n}\n\n// Load value at register pair address to r\nfunction ldRmm(r, m1, m2) {\n  return function(registers, mmu) {\n    const address = pairRegister(registers, m1, m2);\n    registers[r] = mmu.readByte(address);\n    registers.m = 2;\n  };\n}\n\n// load value of r to register pair address\nfunction ldMMr(m1, m2, r) {\n  return function(registers, mmu) {\n    const address = pairRegister(registers, m1, m2);\n    mmu.writeByte(address, r);\n    registers.m = 2;\n  };\n}\n\n// Load value to register pair address\nfunction ldMMn(m1, m2) {\n  return function(registers, mmu) {\n    const address = pairRegister(registers, m1, m2);\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    mmu.writeByte(address, value);\n    registers.m = 3;\n  };\n}\n\n// Load value at address to r\nfunction ldRnn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readWord(registers.pc);\n    registers.pc += 2;\n    registers[r] = value;\n    registers.m = 4;\n  };\n}\n\n// Load r to address\nfunction ldNNr(r) {\n  return function(registers, mmu) {\n    const address = mmu.readWord(registers.pc);\n    registers.pc += 2;\n    mmu.writeByte(address, r);\n    registers.m = 4;\n  };\n}\n\n// Load lo r2 into r\nfunction ldLoRr(r1, r2) {\n  return function(registers, mmu) {\n    const address = 0xFF00 + r2;\n    registers[r1] = mmu.readByte(address);\n    registers.m = 2;\n  };\n}\n\n// Load r2 into lo r1\nfunction ldRrLo(r1, r2) {\n  return function(registers, mmu) {\n    const address = 0xFF00 + r1;\n    mmu.writeByte(address, r2);\n    registers.m = 2;\n  };\n}\n\n// Load r1 r2 pair into r and decrement\nfunction ldRmmDec(r, r1, r2) {\n  return function(registers, mmu) {\n    let address = pairRegister(r1, r2);\n    const value = mmu.readByte(address);\n    registers[r] = value;\n    address = (address - 1) & 0xFFFF;\n    registers[r1] = address >> 8;\n    registers[r2] = address & 0x00FF;\n    registers.m = 2;\n  };\n}\n\n// Load r into r1 r2 pair and decrement\nfunction ldMMrDec(r1, r2, r) {\n  return function(registers, mmu) {\n    let address = pairRegister(r1, r2);\n    mmu.writeByte(address, r);\n    address = (address - 1) & 0xFFFF;\n    registers[r1] = address >> 8;\n    registers[r2] = address & 0x00FF;\n    registers.m = 2;\n  };\n}\n\n// Load r1 r2 pair into r and increment\nfunction ldRmmInc(r, r1, r2) {\n  return function(registers, mmu) {\n    let address = pairRegister(r1, r2);\n    const value = mmu.readByte(address);\n    registers[r] = value;\n    address = (address + 1) & 0xFFFF;\n    registers[r1] = address >> 8;\n    registers[r2] = address & 0x00FF;\n    registers.m = 2;\n  };\n}\n\n// Load r into r1 r2 pair and increment\nfunction ldMMrInc(r1, r2, r) {\n  return function(registers, mmu) {\n    let address = pairRegister(r1, r2);\n    mmu.writeByte(address, r);\n    address = (address + 1) & 0xFFFF;\n    registers[r1] = address >> 8;\n    registers[r2] = address & 0x00FF;\n    registers.m = 2;\n  };\n}\n\n// Put memory address r into lo n\nfunction ldLoNr(r) {\n  return function(registers, mmu) {\n    const address = 0xFF00 + mmu.readByte(registers.pc);\n    registers.pc++;\n    mmu.writeByte(address, r);\n    registers.m = 3;\n  };\n}\n\n// Put memory address n into r\nfunction ldLoRn(r) {\n  return function(registers, mmu) {\n    const address = 0xFF00 + mmu.readByte(registers.pc);\n    registers.pc++;\n    const value = mmu.readByte(address);\n    registers[r] = value;\n    registers.m = 3;\n  };\n}\n\n// 16-Bit loads\n\n// Load value at nn into rr pair\nfunction ldRRnn(r1, r2) {\n  return function(registers, mmu) {\n    registers[r1] = mmu.readByte(registers.pc + 1);\n    registers[r2] = mmu.readByte(registers.pc);\n    registers.pc += 2;\n    registers.m = 3;\n  };\n}\n\n// Load value at nn into sp\nfunction ldSPnn() {\n  return function(registers, mmu) {\n    registers.sp = mmu.readWord(registers.pc);\n    registers.pc += 2;\n    registers.m = 3;\n  };\n}\n\n// Load value at mm into sp\nfunction ldSPmm(r1, r2) {\n  return function(registers) {\n    registers.sp = pairRegister(registers, r1, r2);\n    registers.m = 2;\n  };\n}\n\n// Put SP + n address into HL\n// (May be wrong due to negative)\nfunction ldRRspN(r1, r2) {\n  return function(registers, mmu) {\n    let value = mmu.readByte(registers.pc);\n    registers.pc++;\n    if (value >= 0b10000000) value = -((~value + 1) & 0xFF);\n    const sum = (registers.sp + value) & 0xFFFF;\n    registers[r1] = sum >> 8;\n    registers[r2] = sum & 0x00FF;\n    // XOR inputs to check flags\n    value = registers.sp ^ value ^ sum;\n    let flag = 0;\n    if ((value & 0x100) === 0x100) flag |= 0b00010000;\n    if ((value & 0x10) === 0x10) flag |= 0b00100000;\n    registers.f = flag;\n    registers.m = 3;\n  };\n}\n\n// Put SP address into nn pair\nfunction ldNNsp() {\n  return function(registers, mmu) {\n    const address = mmu.readWord(registers.pc);\n    mmu.writeWord(address, registers.sp);\n    registers.pc += 2;\n    registers.m = 5;\n  };\n}\n\n// Push register pair nn onto Stack\nfunction pushRR(r1, r2) {\n  return function(registers, mmu) {\n    mmu.writeByte(registers.sp - 1, registers[r1]);\n    mmu.writeByte(registers.sp - 2, registers[r2]);\n    registers.sp -= 2;\n    registers.m = 4;\n  };\n}\n\n// Pop pair into rr pair\nfunction popRR(r1, r2) {\n  return function(registers, mmu) {\n    registers[r1] = mmu.readByte(registers.sp + 1);\n    registers[r2] = mmu.readByte(registers.sp);\n    registers.sp += 2;\n    registers.m = 3;\n  };\n}\n\n// 8-Bit ALU\n\n// Handle adding and setting flag to register\nfunction add8r(registers, r, result) {\n  registers[r] = result & 0xFF;\n  let flags = 0;\n  if ((result & 0b00001000) === 0b00001000) flags |= 0b00100000;\n  if ((result & 0b10000000) === 0b10000000) flags |= 0b00010000;\n  if (registers[r] === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// Add r2 to r1\nfunction addRr(r1, r2) {\n  return function(registers) {\n    const result = registers[r1] + registers[r2];\n    add8r(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// Add value of pair to r\nfunction addRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = value + registers[r];\n    add8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Add a value to r\nfunction addRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = value + registers[r];\n    add8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Add r2 with carry to r1\nfunction addCrR(r1, r2) {\n  return function(registers) {\n    const result = (registers[r1] + registers[r2] + getCarry(registers));\n    add8r(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// Add value of pair to r\nfunction addCrMM(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = value + registers[r] + getCarry(registers);\n    add8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Add a value to r\nfunction addCrN(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = value + registers[r] + getCarry(registers);\n    add8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// 8-Bit subtraction helper\nfunction sub8r(registers, r, result) {\n  const prev = registers[r];\n  registers[r] = result & 0xFF;\n  let flags = 0b01000000;\n  // Check if first four bits are smaller than first four subtracted\n  if ((prev & 0xF) < (result & 0xF)) flags |= 0b00100000;\n  if (result < 0) flags |= 0b00010000;\n  if (registers[r] === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// Subtract r2 from r1\nfunction subRr(r1, r2) {\n  return function(registers) {\n    const result = r1 - r2;\n    sub8r(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// Add value of pair to r\nfunction subRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r] - value;\n    add8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Add a value to r\nfunction subRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = registers[r] - value;\n    sub8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Add r2 with carry to r1\nfunction subCrR(r1, r2) {\n  return function(registers) {\n    const result = (registers[r1] - (registers[r2] + getCarry(registers)));\n    sub8r(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// Add value of pair to r\nfunction subCrMM(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r] - (value + getCarry(registers));\n    sub8r(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// 8-Bit AND Helper\nfunction and8(registers, r, result) {\n  registers[r] = result;\n  let flags = 0b00100000;\n  if (result === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// r1 AND r2 into r1\nfunction andRr(r1, r2) {\n  return function(registers) {\n    const result = registers[r1] & registers[r2];\n    and8(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// r AND pair to r\nfunction andRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r1] & value;\n    and8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// r AND n to r\nfunction andRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = registers[r] & value;\n    and8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// 8-Bit OR helper\nfunction or8(registers, r, result) {\n  registers[r] = result;\n  let flags = 0;\n  if (result === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// r1 OR r2 to r1\nfunction orRr(r1, r2) {\n  return function(registers) {\n    const result = registers[r1] | registers[r2];\n    or8(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// r OR pair to r\nfunction orRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r] | value;\n    or8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// r OR n to r\nfunction orRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = registers[r] | value;\n    or8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// XOR 8-Bit helper\nfunction xor8(registers, r, result) {\n  registers[r] = result;\n  let flags = 0;\n  if (result === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// r1 XOR r2 to r1\nfunction xorRr(r1, r2) {\n  return function(registers) {\n    const result = registers[r1] ^ registers[r2];\n    xor8(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// r XOR pair to r\nfunction xorRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r] ^ value;\n    xor8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// r XOR n to r\nfunction xorRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = registers[r] ^ value;\n    xor8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// CP 8-Bit helper\nfunction cp8(registers, r, result) {\n  const value = registers[r];\n  let flags = 0b01000000;\n  // Check if first four bits are smaller than first four subtracted\n  if ((value & 0xF) < (result & 0xF)) flags |= 0b00100000;\n  if (result < 0) flags |= 0b00010000;\n  if (registers[r] === 0) flags |= 0b10000000;\n  registers.f = flags;\n}\n\n// Compare r1 with r2 (r1 - r2)\nfunction cpRr(r1, r2) {\n  return function(registers) {\n    const result = registers[r1] - registers[r2];\n    cp8(registers, r1, result);\n    registers.m = 1;\n  };\n}\n\n// Compare r1 with pair (r1 - pair)\nfunction cpRmm(r, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = registers[r] - value;\n    cp8(registers, r, result);\n    registers.m = 2;\n  };\n}\n\n// Compare r with n (r - n)\nfunction cpRn(r) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(registers.pc);\n    registers.pc++;\n    const result = registers[r] - value;\n    cp8(result);\n    registers.m = 2;\n  };\n}\n\n// Increment register r\nfunction incR(r) {\n  return function(registers) {\n    const result = registers[r] + 1;\n    registers[r] = result & 0xFF;\n    let flags = registers.f & 0b00010000;\n    if (registers[r] === 0) flags |= 0b10000000;\n    if ((result & 0b00001000) === 0b00001000) flags |= 0b00100000;\n    registers.f = flags;\n    registers.m = 1;\n  };\n}\n\n// Increment value at pair\nfunction incMM(r1, r2) {\n  return function(registers, mmu) {\n    const address = pairRegister(registers, r1, r2);\n    const result = mmu.readByte(address) + 1;\n    mmu.writeByte(address, result & 0xFF);\n    let flags = registers.f & 0b00010000;\n    if ((result & 0xFF) === 0) flags |= 0b10000000;\n    if ((result & 0b00001000) === 0b00001000) flags |= 0b00100000;\n    registers.f = flags;\n    registers.m = 3;\n  };\n}\n\n// Decrement register r\nfunction decR(r) {\n  return function(registers) {\n    const prev = registers[r];\n    const result = registers[r] - 1;\n    registers[r] = result & 0xFF;\n    let flags = registers.f & 0b00010000;\n    flags |= 0b01000000;\n    if ((result & 0xFF) === 0) flags |= 0b10000000;\n    if ((prev & 0xF) < (result & 0xF)) flags |= 0b00100000;\n    registers.f = flags;\n    registers.m = 1;\n  };\n}\n\n// Decrement value at pair\nfunction decMM(r1, r2) {\n  return function(registers, mmu) {\n    const address = pairRegister(registers, r1, r2);\n    const prev = mmu.readByte(address);\n    const result = prev - 1;\n    mmu.writeByte(address, result & 0xFF);\n    let flags = registers.f & 0b00010000;\n    flags |= 0b01000000;\n    if ((result & 0xFF) === 0) flags |= 0b10000000;\n    if ((prev & 0xF) < (result & 0xF)) flags |= 0b00100000;\n    registers.f = flags;\n    registers.m = 3;\n  };\n}\n\n// 16-Bit ALU\n\n// Add r3r4 pair to r1r2\nfunction addRRrr(r1, r2, r3, r4) {\n  return function(registers) {\n    const p1 = pairRegister(registers, r1, r2);\n    const p2 = pairRegister(registers, r3, r4);\n    const result = p1 + p2;\n    const final = result & 0xFFFF;\n    registers[r1] = final >> 8;\n    registers[r2] = final & 0xFF;\n    let flags = registers.f & 0b10000000;\n    if ((result & 0b0000100000000000) === 0b0000100000000000) {\n      flags |= 0b00100000;\n    }\n    if ((result & 0b1000000000000000) === 0b1000000000000000) {\n      flags |= 0b00010000;\n    }\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// App sp to pair\nfunction addRRsp(r1, r2) {\n  return function(registers) {\n    const value = pairRegister(registers, r1, r2);\n    const result = value + registers.sp;\n    const final = result & 0xFFFF;\n    registers[r1] = final >> 8;\n    registers[r2] = final & 0xFF;\n    let flags = registers.f & 0b10000000;\n    if ((result & 0b0000100000000000) === 0b0000100000000000) {\n      flags |= 0b00100000;\n    }\n    if ((result & 0b1000000000000000) === 0b1000000000000000) {\n      flags |= 0b00010000;\n    }\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// add n to SP\n// (May be wrong due to negative)\nfunction addSPn() {\n  return function(registers, mmu) {\n    let value = mmu.readByte(registers.pc);\n    registers.pc++;\n    if (value >= 0b10000000) value = -((~value + 1) & 0xFF);\n    const sum = (registers.sp + value) & 0xFFFF;\n    registers.sp = sum;\n    const result = registers.sp ^ value ^ sum;\n    let flags = 0;\n    if ((result & 0x10) === 0x10) flags |= 0b00100000;\n    if ((result & 0x100) === 0x100) flags |= 0b00010000;\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Increment RR\nfunction incRR(r1, r2) {\n  return function(registers) {\n    const value = (pairRegister(r1, r2) + 1) & 0xFFFF;\n    registers[r1] = value >> 8;\n    registers[r2] = value & 0xFF;\n    registers.m = 2;\n  };\n}\n\nfunction incSP() {\n  return function(registers) {\n    registers.sp = (registers.sp + 1) & 0xFFFF;\n    registers.m = 2;\n  };\n}\n\n// Decrement RR\nfunction decRR(r1, r2) {\n  return function(registers) {\n    const value = (pairRegister(r1, r2) - 1) & 0xFFFF;\n    registers[r1] = value >> 8;\n    registers[r2] = value & 0xFF;\n    registers.m = 2;\n  };\n}\n\nfunction decSP() {\n  return function(registers) {\n    registers.sp = (registers.sp - 1) & 0xFFFF;\n    registers.m = 2;\n  };\n}\n\n// Misc\n\n// Swap upper and lower nibles of n\nfunction swapR(r) {\n  return function(registers) {\n    const result = registers[r] >> 4 + (registers[r] & 0xF) << 4;\n    registers[r] = result;\n    let flags = 0;\n    if (result === 0) flags |= 0b10000000;\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// Swap value at address\nfunction swapMM(r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = value >> 4 + (value & 0xF) << 4;\n    let flags = 0;\n    if (result === 0) flags |= 0b10000000;\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Decimal adjust register r\nfunction daR(r) {\n  return function(registers) {\n    let flags = 0;\n    if (!getSubtraction(registers)) {\n      if (getCarry(registers) || registers[r] > 0x99) {\n        registers[r] = (registers[r] + 0x60) & 0xFF;\n        flags |= 0b00010000;\n      }\n      if (getHalfCarry(registers) || (registers[r] & 0xF) > 0x9) {\n        registers[r] = (registers[r] + 0x06) & 0xFF;\n        flags |= 0b00100000;\n      }\n    } else if (getCarry(registers) && getHalfCarry(registers)) {\n      registers[r] = (registers[r] + 0x9A) & 0xFF;\n      flags |= 0b00100000;\n    } else if (getCarry(registers)) {\n      registers[r] = (registers[r] + 0xA0) & 0xFF;\n    } else if (getHalfCarry(registers)) {\n      registers[r] = (registers[r] + 0xFA) & 0xFF;\n    }\n    if (registers[r] === 0) flags |= 0b10000000;\n    registers.f = flags;\n    registers.m = 1;\n  };\n}\n\n// Complement r\nfunction cplR(r) {\n  return function(registers) {\n    registers[r] ^= 0xFF;\n    registers.f |= 0b01100000;\n    registers.m = 1;\n  };\n}\n\n// Complement carry flag\nfunction ccf() {\n  return function(registers) {\n    let flags = registers.f & 0b10000000;\n    if (!getCarry(registers)) {\n      flags |= 0b00010000;\n    }\n    registers.f = flags;\n    registers.m = 1;\n  };\n}\n\n// Set carry flag\nfunction scf() {\n  return function(registers) {\n    registers.f &= 0b10010000;\n    registers.m = 1;\n  };\n}\n\n// No operation\nfunction nop() {\n  return function(registers) {\n    registers.m = 1;\n  };\n}\n\nfunction halt() {\n  return function(registers) {\n    registers.halt = 1;\n    registers.m = 1;\n  };\n}\n\nfunction stop() {\n  return function(registers) {\n    registers.stop = 1;\n    registers.m = 1;\n  };\n}\n\nfunction di() {\n  return function(registers) {\n    registers.interrupt = 0;\n    registers.m = 1;\n  };\n}\n\nfunction ei() {\n  return function(registers) {\n    registers.interrupt = 1;\n    registers.m = 1;\n  };\n}\n\n// Rotate r left with new carry and sig dig being carry\nfunction rlcR(r, isCB) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b10000000) >> 3;\n    let carry = flags === 0b00010000 ? 1 : 0;\n    result = ((result << 1) & 0xFF) | carry;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = isCB ? 2 : 1;\n  };\n}\n\n// Rotate r  pair left with new carry and sig dig being carry\nfunction rlcMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(registers, r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b10000000) >> 3;\n    let carry = flags === 0b00010000 ? 1 : 0;\n    result = ((result << 1) & 0xFF) | carry;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Rotate through current carry flag\nfunction rlR(r, isCB) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b10000000) >> 3;\n    let carry = getCarry(registers) ? 1 : 0;\n    result = ((result << 1) & 0xFF) | carry;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = isCB ? 2 : 1;\n  };\n}\n\n// Rotate pair through current carry flag\nfunction rlMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(registers, r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b10000000) >> 3;\n    let carry = getCarry(registers) ? 1 : 0;\n    result = ((result << 1) & 0xFF) | carry;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Rotate r right with new carry and 0 bit being carry\nfunction rrcR(r, isCB) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b00000001) << 4;\n    const carry = flags === 0b00010000 ? 0b10000000 : 0;\n    result = (result >> 1) | carry;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = isCB ? 2 : 1;\n  };\n}\n\n// Rotate through current carry flag\nfunction rrR(r, isCB) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b00000001) << 4;\n    const carry = getCarry(registers) ? 0b10000000 : 0;\n    result = (result >> 1) | carry;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = isCB ? 2 : 1;\n  };\n}\n\n// Rotate pair right with new carry and 0 bit being carry\nfunction rrcMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b00000001) << 4;\n    const carry = flags === 0b00010000 ? 0b10000000 : 0;\n    result = (result >> 1) | carry;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Rotate pair through current carry flag\nfunction rrMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b00000001) << 4;\n    const carry = getCarry(registers) ? 0b10000000 : 0;\n    result = (result >> 1) | carry;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Shift r left into carry\nfunction slaR(r) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b10000000) >> 3;\n    result = (result << 1) & 0xFF;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// Shift pair left into carry\nfunction slaMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(registers, r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b10000000) >> 3;\n    result = (result << 1) & 0xFF;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Shift r right into carry, MSB unchanged\nfunction sraR(r) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b00000001) << 4;\n    result = (result >> 1) | (result & 0b10000000);\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// Shift pair right into carry, MSB unchanged\nfunction sraMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b00000001) << 4;\n    result = (result >> 1) | (result * 0b10000000);\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Shift r right into carry, MSB 0\nfunction srlR(r) {\n  return function(registers) {\n    let result = registers[r];\n    let flags = (result & 0b00000001) << 4;\n    result >>= 1;\n    if (result === 0) flags |= 0b10000000;\n    registers[r] = result;\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// Shift pair right into carry, MSB 0\nfunction srlMM(r1, r2) {\n  return function(registers, mmu) {\n    let pair = pairRegister(r1, r2);\n    let result = mmu.readByte(pair);\n    let flags = (result & 0b00000001) << 4;\n    result >>= 1;\n    if (result === 0) flags |= 0b10000000;\n    mmu.writeByte(pair, result);\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Get bit at value.\nfunction getBit(bit, value) {\n  return (value >> bit) & 0b1;\n}\n\n// Return number with set or reset.\nfunction setBit(bit, value, isSet) {\n  if (isSet) {\n    return value | (1 << bit);\n  }\n\n  const mask = (0xFF - (1 << bit));\n  return value & mask;\n}\n\n// Test bit b in register r\nfunction bitBr(b, r) {\n  return function(registers) {\n    const result = getBit(b, r);\n    let flags = registers.f & 0b00111111;\n    if (result === 0) flags |= 0b10000000;\n    registers.f = flags;\n    registers.m = 2;\n  };\n}\n\n// Test bit b in register pair\nfunction bitBmm(b, r1, r2) {\n  return function(registers, mmu) {\n    const value = mmu.readByte(pairRegister(registers, r1, r2));\n    const result = getBit(b, value);\n    let flags = registers.f & 0b00111111;\n    if (result === 0) flags |= 0b10000000;\n    registers.f = flags;\n    registers.m = 4;\n  };\n}\n\n// Set a bit at b in register r\nfunction setBr(b, r) {\n  return function(registers) {\n    registers[r] = setBit(b, r, true);\n    registers.m = 2;\n  };\n}\n\n// Set a bit at b in register pair\nfunction setBmm(b, r1, r2) {\n  return function(registers, mmu) {\n    const pair = pairRegister(registers, r1, r2);\n    const value = setBit(b, mmu.readByte(pair), true);\n    mmu.writeByte(pair, value);\n    registers.m = 4;\n  };\n}\n\n// Reset a bit at b in register r\nfunction resBr(b, r) {\n  return function(registers) {\n    registers[r] = setBit(b, r, false);\n    registers.m = 2;\n  };\n}\n\n// Reset a bit at b in register pair\nfunction resBmm(b, r1, r2) {\n  return function(registers, mmu) {\n    const pair = pairRegister(registers, r1, r2);\n    const value = setBit(b, mmu.readByte(pair), false);\n    mmu.writeByte(pair, value);\n    registers.m = 4;\n  };\n}\n\n// 8-Bit load operations\n// LD nn,n\ncodes[0x06] = ldRn('b');\ncodes[0x0E] = ldRn('c');\ncodes[0x16] = ldRn('d');\ncodes[0x1E] = ldRn('e');\ncodes[0x26] = ldRn('h');\ncodes[0x2E] = ldRn('l');\n\n// LD r1,r2\ncodes[0x7F] = ldR1R2('a', 'a');\ncodes[0x78] = ldR1R2('a', 'b');\ncodes[0x79] = ldR1R2('a', 'c');\ncodes[0x7A] = ldR1R2('a', 'd');\ncodes[0x7B] = ldR1R2('a', 'e');\ncodes[0x7C] = ldR1R2('a', 'h');\ncodes[0x7D] = ldR1R2('a', 'l');\ncodes[0x0A] = ldRmm('a', 'b', 'c');\ncodes[0x1A] = ldRmm('a', 'd', 'e');\ncodes[0x7E] = ldRmm('a', 'h', 'l');\ncodes[0xFA] = ldRnn('a');\ncodes[0x3E] = ldRn('a');\n(function() {\n  // Generate b to l\n  const registers = ['b', 'c', 'd', 'e', 'h', 'l'];\n  let current = 0x40;\n  for (let i = 0; i < registers.length; ++i) {\n    for (let j = 0; j < registers.length; ++j) {\n      codes[current] = ldR1R2(registers[i], registers[j]);\n      current++;\n    }\n    // LD n,A\n    codes[current] = ldR1R2(registers[i], 'a');\n    current++;\n    // LD n,(HL)\n    codes[current] = ldRmm(registers[i], 'h', 'l');\n    current++;\n  }\n\n  // Generate (hl)\n  for (let i = 0; i < registers.length; ++i) {\n    codes[current] = ldMMr('h', 'l', registers[i]);\n    current++;\n  }\n  codes[0x36] = ldMMn('h', 'l');\n})();\n// LD n,A\ncodes[0x02] = ldMMr('b', 'c', 'a');\ncodes[0x12] = ldMMr('d', 'e', 'a');\ncodes[0x77] = ldMMr('h', 'l', 'a');\ncodes[0xEA] = ldNNr('a');\n// LD A,(C)\ncodes[0xF2] = ldLoRr('a', 'c');\n// LD (C),A\ncodes[0xE2] = ldRrLo('c', 'a');\n// LD A,(HLD)\ncodes[0x3A] = ldRmmDec('a', 'h', 'l');\n// LD (HLD),A\ncodes[0x32] = ldMMrDec('h', 'l', 'a');\n// LD A,(HLI)\ncodes[0x2A] = ldRmmInc('a', 'h', 'l');\n// LD (HLI),A\ncodes[0x22] = ldMMrInc('h', 'l', 'a');\n// LDH (n),A\ncodes[0xE0] = ldLoNr('a');\n// LDH A,(n)\ncodes[0xF0] = ldLoRn('a');\n\n// 16-Bit load operations\n\n// LD n,nn\ncodes[0x01] = ldRRnn('b', 'c');\ncodes[0x11] = ldRRnn('d', 'e');\ncodes[0x21] = ldRRnn('h', 'l');\ncodes[0x31] = ldSPnn();\n// LD SP,HL\ncodes[0xF9] = ldSPmm('h', 'l');\n// LDHL SP,n\ncodes[0xF8] = ldRRspN('h', 'l');\n// LD (nn),SP\ncodes[0x08] = ldNNsp();\n\n// PUSH nn\ncodes[0xF5] = pushRR('a', 'f');\ncodes[0xC5] = pushRR('b', 'c');\ncodes[0xD5] = pushRR('d', 'e');\ncodes[0xE5] = pushRR('h', 'l');\n\n// POP nn\ncodes[0xF1] = popRR('a', 'f');\ncodes[0xC1] = popRR('b', 'c');\ncodes[0xD1] = popRR('d', 'e');\ncodes[0xE1] = popRR('h', 'l');\n\n// 8-Bit ALU operations\n\n// ADD A,n\ncodes[0x87] = addRr('a', 'a');\ncodes[0x80] = addRr('a', 'b');\ncodes[0x81] = addRr('a', 'c');\ncodes[0x82] = addRr('a', 'd');\ncodes[0x83] = addRr('a', 'e');\ncodes[0x84] = addRr('a', 'h');\ncodes[0x85] = addRr('a', 'l');\ncodes[0x86] = addRmm('a', 'h', 'l');\ncodes[0xC6] = addRn('a');\n\n// ADC A,n\ncodes[0x8F] = addCrR('a', 'a');\ncodes[0x88] = addCrR('a', 'b');\ncodes[0x89] = addCrR('a', 'c');\ncodes[0x8A] = addCrR('a', 'd');\ncodes[0x8B] = addCrR('a', 'e');\ncodes[0x8C] = addCrR('a', 'h');\ncodes[0x8D] = addCrR('a', 'l');\ncodes[0x8E] = addCrMM('a', 'h', 'l');\ncodes[0xCE] = addCrN('a');\n\n// SUB n\ncodes[0x97] = subRr('a', 'a');\ncodes[0x90] = subRr('a', 'b');\ncodes[0x91] = subRr('a', 'c');\ncodes[0x92] = subRr('a', 'd');\ncodes[0x93] = subRr('a', 'e');\ncodes[0x94] = subRr('a', 'h');\ncodes[0x95] = subRr('a', 'l');\ncodes[0x96] = subRmm('a', 'h', 'l');\ncodes[0xD6] = subRn('a');\n\n// SBC A,n\ncodes[0x9F] = subCrR('a', 'a');\ncodes[0x98] = subCrR('a', 'b');\ncodes[0x99] = subCrR('a', 'c');\ncodes[0x9A] = subCrR('a', 'd');\ncodes[0x9B] = subCrR('a', 'e');\ncodes[0x9C] = subCrR('a', 'h');\ncodes[0x9D] = subCrR('a', 'l');\ncodes[0x9E] = subCrMM('a', 'h', 'l');\n\n// AND n\ncodes[0xA7] = andRr('a', 'a');\ncodes[0xA0] = andRr('a', 'b');\ncodes[0xA1] = andRr('a', 'c');\ncodes[0xA2] = andRr('a', 'd');\ncodes[0xA3] = andRr('a', 'e');\ncodes[0xA4] = andRr('a', 'h');\ncodes[0xA5] = andRr('a', 'l');\ncodes[0xA6] = andRmm('a', 'h', 'l');\ncodes[0xE6] = andRn('a');\n\n// OR n\ncodes[0xB7] = orRr('a', 'a');\ncodes[0xB0] = orRr('a', 'b');\ncodes[0xB1] = orRr('a', 'c');\ncodes[0xB2] = orRr('a', 'd');\ncodes[0xB3] = orRr('a', 'e');\ncodes[0xB4] = orRr('a', 'h');\ncodes[0xB5] = orRr('a', 'l');\ncodes[0xB6] = orRmm('a', 'h', 'l');\ncodes[0xF6] = orRn('a');\n\n// XOR n\ncodes[0xAF] = xorRr('a', 'a');\ncodes[0xA8] = xorRr('a', 'b');\ncodes[0xA9] = xorRr('a', 'c');\ncodes[0xAA] = xorRr('a', 'd');\ncodes[0xAB] = xorRr('a', 'e');\ncodes[0xAC] = xorRr('a', 'h');\ncodes[0xAD] = xorRr('a', 'l');\ncodes[0xAE] = xorRmm('a', 'h', 'l');\ncodes[0xEE] = xorRn('a');\n\n// CP n\ncodes[0xBF] = cpRr('a', 'a');\ncodes[0xB8] = cpRr('a', 'b');\ncodes[0xB9] = cpRr('a', 'c');\ncodes[0xBA] = cpRr('a', 'd');\ncodes[0xBB] = cpRr('a', 'e');\ncodes[0xBC] = cpRr('a', 'h');\ncodes[0xBD] = cpRr('a', 'l');\ncodes[0xBE] = cpRmm('a', 'h', 'l');\ncodes[0xFE] = cpRn('a');\n\n// INC n\ncodes[0x3C] = incR('a');\ncodes[0x04] = incR('b');\ncodes[0x0C] = incR('c');\ncodes[0x14] = incR('d');\ncodes[0x1C] = incR('e');\ncodes[0x24] = incR('h');\ncodes[0x2C] = incR('l');\ncodes[0x34] = incMM('h', 'l');\n\n// DEC n\ncodes[0x3D] = decR('a');\ncodes[0x05] = decR('b');\ncodes[0x0D] = decR('c');\ncodes[0x15] = decR('d');\ncodes[0x1D] = decR('e');\ncodes[0x25] = decR('h');\ncodes[0x2D] = decR('l');\ncodes[0x35] = decMM('h', 'l');\n\n// 16-Bit ALU\n\n// ADD HL,n\ncodes[0x09] = addRRrr('h', 'l', 'b', 'c');\ncodes[0x19] = addRRrr('h', 'l', 'd', 'e');\ncodes[0x29] = addRRrr('h', 'l', 'h', 'l');\ncodes[0x39] = addRRsp('h', 'l');\n\n// ADD SP,n\ncodes[0xE8] = addSPn();\n\n// INC nn\ncodes[0x03] = incRR('b', 'c');\ncodes[0x13] = incRR('d', 'e');\ncodes[0x23] = incRR('h', 'l');\ncodes[0x33] = incSP();\n\n// DEC nn\ncodes[0x0B] = decRR('b', 'c');\ncodes[0x1B] = decRR('d', 'e');\ncodes[0x2B] = decRR('h', 'l');\ncodes[0x3B] = decSP();\n\n// Misc\n\n// SWAP n\ncbOperations[0x37] = swapR('a');\ncbOperations[0x30] = swapR('b');\ncbOperations[0x31] = swapR('c');\ncbOperations[0x32] = swapR('d');\ncbOperations[0x33] = swapR('e');\ncbOperations[0x34] = swapR('h');\ncbOperations[0x35] = swapR('l');\ncbOperations[0x36] = swapMM('h', 'l');\n\n// DAA\ncodes[0x27] = daR('a');\n\n// CPL\ncodes[0x2F] = cplR('a');\n// CCF\ncodes[0x3F] = ccf();\n// SCF\ncodes[0x37] = scf();\n// NOP\ncodes[0x00] = nop();\n// HALT\ncodes[0x76] = halt();\n// STOP\ncodes[0x1000] = stop();\n// DI\ncodes[0xF3] = di();\n// EI\ncodes[0xFB] = ei();\n\n// RLCA\ncodes[0x07] = rlcR('a');\n// RLA\ncodes[0x17] = rlR('a');\n// RRCA\ncodes[0x0F] = rrcR('a');\n// RRA\ncodes[0x1F] = rrR('a');\n\n// RLC n\ncbOperations[0x07] = rlcR('a', true);\ncbOperations[0x00] = rlcR('b', true);\ncbOperations[0x01] = rlcR('c', true);\ncbOperations[0x02] = rlcR('d', true);\ncbOperations[0x03] = rlcR('e', true);\ncbOperations[0x04] = rlcR('h', true);\ncbOperations[0x05] = rlcR('l', true);\ncbOperations[0x06] = rlcMM('h', 'l');\n\n// RL n\ncbOperations[0x17] = rlR('a', true);\ncbOperations[0x10] = rlR('b', true);\ncbOperations[0x11] = rlR('c', true);\ncbOperations[0x12] = rlR('d', true);\ncbOperations[0x13] = rlR('e', true);\ncbOperations[0x14] = rlR('h', true);\ncbOperations[0x15] = rlR('l', true);\ncbOperations[0x16] = rlMM('h', 'l');\n\n// RRC n\ncbOperations[0x0F] = rrcR('a', true);\ncbOperations[0x08] = rrcR('b', true);\ncbOperations[0x09] = rrcR('c', true);\ncbOperations[0x0A] = rrcR('d', true);\ncbOperations[0x0B] = rrcR('e', true);\ncbOperations[0x0C] = rrcR('h', true);\ncbOperations[0x0D] = rrcR('l', true);\ncbOperations[0x0E] = rrcMM('h', 'l');\n\n// RR n\ncbOperations[0x1F] = rrR('a', true);\ncbOperations[0x18] = rrR('b', true);\ncbOperations[0x19] = rrR('c', true);\ncbOperations[0x1A] = rrR('d', true);\ncbOperations[0x1B] = rrR('e', true);\ncbOperations[0x1C] = rrR('h', true);\ncbOperations[0x1D] = rrR('l', true);\ncbOperations[0x1E] = rrMM('h', 'l');\n\n// SLA n\ncbOperations[0x27] = slaR('a');\ncbOperations[0x20] = slaR('b');\ncbOperations[0x21] = slaR('c');\ncbOperations[0x22] = slaR('d');\ncbOperations[0x23] = slaR('e');\ncbOperations[0x24] = slaR('h');\ncbOperations[0x25] = slaR('l');\ncbOperations[0x26] = slaMM('h', 'l');\n\n// SRA n\ncbOperations[0x2F] = sraR('a');\ncbOperations[0x28] = sraR('b');\ncbOperations[0x29] = sraR('c');\ncbOperations[0x2A] = sraR('d');\ncbOperations[0x2B] = sraR('e');\ncbOperations[0x2C] = sraR('h');\ncbOperations[0x2D] = sraR('l');\ncbOperations[0x2E] = sraMM('h', 'l');\n\n// SRL n\ncbOperations[0x3F] = srlR('a');\ncbOperations[0x38] = srlR('b');\ncbOperations[0x39] = srlR('c');\ncbOperations[0x3A] = srlR('d');\ncbOperations[0x3B] = srlR('e');\ncbOperations[0x3C] = srlR('h');\ncbOperations[0x3D] = srlR('l');\ncbOperations[0x3E] = srlMM('h', 'l');\n\n(function() {\n  function bitop(start, fnR, fnMM) {\n    const registers = ['b', 'c', 'd', 'e', 'h', 'l', 'hl', 'a'];\n    const bits = 8;\n    let code = 0x40;\n    for (let i = 0; i < bits; ++i) {\n      for (let j = 0; j < registers.length; ++j) {\n        const char = registers[j];\n        if (char === 'hl') {\n          cbOperations[code] = fnMM(i, 'h', 'l');\n        } else {\n          cbOperations[code] = fnR(i, char);\n        }\n        code++;\n      }\n    }\n  }\n\n  // BIT b,r\n  bitop(0x40, bitBr, bitBmm);\n  // SET b,r\n  bitop(0xC0, setBr, setBmm);\n  // RES b,r\n  bitop(0x80, resBr, resBmm);\n})();\n\nexport default operations;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/operations.js\n **/","/**\n * Binds itself to an element and updates based on the value in the object.\n */\nclass DataElement {\n  constructor (element, object, key) {\n    this._element = element;\n    this._object = object;\n    this._key = key;\n    this._prev = null;\n  }\n\n  update () {\n    const value = this._object[this._key];\n    if (this._prev !== value) {\n      this._element.textContent = value;\n      this._prev = value;\n    }\n  }\n}\n\nexport default DataElement;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/debug/data-element.js\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/normalize.css/normalize.css\n ** module id = 5\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./style/main.css\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}